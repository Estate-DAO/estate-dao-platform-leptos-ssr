[package]
name = "estate-fe"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
cfg-if = "1.0.0"
console_log = "1"
log = "0.4"
axum = { version = "0.7", optional = true, features = ["macros"] }
console_error_panic_hook = "0.1"
leptos = { version = "0.6", features = ["nightly"] }
leptos_axum = { version = "0.6", optional = true }
leptos_meta = { version = "0.6", features = ["nightly"] }
leptos_router = { version = "0.6", features = ["nightly"] }
leptos_icons = "0.3.1"
icondata = "0.4.0"
icondata_core = "0.1.0"
tokio = { version = "1", features = ["rt-multi-thread"], optional = true }
tower = { version = "0.4", features = ["util"], optional = true }
tower-http = { version = "0.5", features = ["fs"], optional = true }
wasm-bindgen = "=0.2.95"
thiserror = "1"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
tracing = { version = "0.1", optional = true }
http = "1"
axum-extra = { version = "0.9.3", optional = true, features = [
    "cookie",
    "cookie-signed",
    "cookie-private",
] }
simple_logger = "5.0.0"
web-sys = "0.3.70"
leptos-use = { version = "0.13.5", features = ["use_timestamp"] }
chrono = "0.4.38"
anyhow = "1.0.89"
derive_more = { version = "1.0.0", features = ["display"] }
error-stack = "0.5.0"
accounting = "0.2.0"
# reqwest = { version = "0.12.8", default-features = false, features = ["json", "gzip", "deflate", "http2"] }
reqwest = { version = "0.12.8", default-features = false, features = [
    "json",
    "http2",
] }
flate2 = "1.0.34"
serde_path_to_error = "0.1.16"
leptos_query = { version = "0.5.3", features = ["local_storage", "indexed_db"] }
leptos_query_devtools = { version = "0.1.3", features = ["wasm-bindgen", "web-sys", "js-sys"] }
better-panic = "0.3.0"

# reqwest = { version = "0.12.8", default-features = false, features = ["json", "http2", "gzip", "deflate"] }
# async-compression = { version = "0.4.14", features = ["gzip"] }

# reqwest = { version = "0.11.22", features = [ "json", "gzip", "deflate"]}
# chrono = { version = "0.4.38"}

[features]
hydrate = [
    "leptos/hydrate",
    "leptos_meta/hydrate",
    "leptos_router/hydrate",
    "leptos_query/hydrate",
    "leptos_query_devtools/csr",
    "reqwest/native-tls",
    "leptos-use/use_timestamp",
    # , "reqwest/gzip"
]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:tower",
    "dep:tower-http",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_query/ssr",
    "leptos_router/ssr",
    "dep:tracing",
    "reqwest/rustls-tls",
    "leptos-use/use_timestamp",
    # "reqwest/gzip"
]

local_api = []

local-lib = ["local_api", "hydrate" ]

local-bin = ["ssr","local_api"]

# # Defines a size-optimized profile for the WASM bundle in release mode
# [profile.wasm-release]
# inherits = "release"
# opt-level = 'z'
# lto = true
# codegen-units = 1
# panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "estate-fe"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
# style-file = "style/main.scss"

# The tailwind input file.
tailwind-input-file = "style/input.css"

# The tailwind config file.
tailwind-config-file = "tailwind.config.js"


# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
