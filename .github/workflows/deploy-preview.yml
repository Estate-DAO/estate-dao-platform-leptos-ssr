name: Deploy Preview

on:
  pull_request:
    types: [opened, reopened, synchronize, closed, labeled, unlabeled]

permissions:
  deployments: write
  pull-requests: read

env:
  FLY_API_TOKEN: ${{ secrets.FLY_IO_PRODUCTION_ENVIRONMENT_DEPLOY_TOKEN }}
  FLY_ORG: estate-dao-769

jobs:
  build_check:
    uses: ./.github/workflows/build-check.yml
    with:
      publish-artifact: true
    secrets: inherit

  destroy_preview:
    if: github.event.pull_request.state == 'closed'
    runs-on: ubuntu-latest
    environment:
      name: pr-${{ github.event.number }}
    steps:
      - name: Destroy preview app
        uses: superfly/fly-pr-review-apps@1.2.1

  preview:
    if: github.event.pull_request.state == 'open'
    needs: build_check
    runs-on: ubuntu-latest
    concurrency:
      group: pr-${{ github.event.number }}
    environment:
      name: pr-${{ github.event.number }}
    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-debian
          path: .  # root directory for Docker context

      - name: Reshape artifacts into expected target structure
        run: |
          echo "Moving files into target/ structure for Docker build..."
          mkdir -p target/release
          mkdir -p target/site

          # Move binaries + hash
          if [ -f estate-fe ]; then mv estate-fe target/release/; fi
          if [ -f hash.txt ]; then mv hash.txt target/release/; fi

          # Move site folder
          if [ -d site ]; then mv site/* target/site/; fi

          # Keep city.json at root
          ls -la target/release
          ls -la target/site || true
          ls -la

      - name: Verify files for Docker build
        run: |
          test -f "target/release/estate-fe" || { echo "❌ estate-fe missing"; exit 1; }
          test -f "target/release/hash.txt" || { echo "❌ hash.txt missing"; exit 1; }
          test -d "target/site" || { echo "❌ site directory missing"; exit 1; }
          test -f "city.json" || { echo "❌ city.json missing"; exit 1; }

      - run: chmod +x target/release/estate-fe

      - name: Deploy preview app
        id: deploy
        uses: superfly/fly-pr-review-apps@1.5.0
        with:
          name: pr-${{ github.event.number }}-estate
          region: bom
          path: .

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Set Fly.io secret tokens
        run: |
          APP_NAME="${{ steps.deploy.outputs.app-name }}"
          echo "Setting required secrets for $APP_NAME..."

          flyctl secrets set ESTATE_DAO_SNS_PROPOSAL_SUBMISSION_IDENTITY_PRIVATE_KEY="$ESTATE_DAO_SNS_PROPOSAL_SUBMISSION_IDENTITY_PRIVATE_KEY" --app "$APP_NAME" --stage

          flyctl secrets set \
            PROVAB_HEADERS="$PROVAB_HEADERS" \
            FLY_API_TOKEN="$FLY_API_TOKEN" \
            NOW_PAYMENTS_USDC_ETHEREUM_API_KEY="$NOW_PAYMENTS_USDC_ETHEREUM_API_KEY" \
            BASIC_AUTH_PASSWORD_FOR_LEPTOS_ROUTE="$BASIC_AUTH_PASSWORD_FOR_LEPTOS_ROUTE" \
            BASIC_AUTH_USERNAME_FOR_LEPTOS_ROUTE="$BASIC_AUTH_USERNAME_FOR_LEPTOS_ROUTE" \
            COOKIE_KEY="$COOKIE_KEY" \
            EMAIL_ACCESS_TOKEN="$EMAIL_ACCESS_TOKEN" \
            EMAIL_CLIENT_ID="$EMAIL_CLIENT_ID" \
            EMAIL_CLIENT_SECRET="$EMAIL_CLIENT_SECRET" \
            EMAIL_REFRESH_TOKEN="$EMAIL_REFRESH_TOKEN" \
            EMAIL_TOKEN_EXPIRY="$EMAIL_TOKEN_EXPIRY" \
            LITEAPI_KEY="$LITEAPI_KEY" \
            LITEAPI_PREBOOK_BASE_URL="$LITEAPI_PREBOOK_BASE_URL" \
            NOWPAYMENTS_IPN_SECRET="$NOWPAYMENTS_IPN_SECRET" \
            STRIPE_SECRET_KEY="$STRIPE_SECRET_KEY" \
            YRAL_AUTH_CLIENT_ID="$YRAL_AUTH_CLIENT_ID" \
            YRAL_AUTH_CLIENT_SECRET="$YRAL_AUTH_CLIENT_SECRET" \
            YRAL_AUTH_REDIRECT_URL="https://$APP_NAME.fly.dev/auth/callback" \
            --app "$APP_NAME" --stage
        env:
          PROVAB_HEADERS: ${{ secrets.PROVAB_PRODUCTION_ENVIRONMENT_REQUEST_HEADER_CONTENTS }}
          FLY_API_TOKEN: ${{ secrets.FLY_IO_PRODUCTION_ENVIRONMENT_DEPLOY_TOKEN }}
          NOW_PAYMENTS_USDC_ETHEREUM_API_KEY: ${{ secrets.NOW_PAYMENTS_USDC_ETHEREUM_API_KEY }}
          ESTATE_DAO_SNS_PROPOSAL_SUBMISSION_IDENTITY_PRIVATE_KEY: ${{ secrets.ESTATE_DAO_SNS_PROPOSAL_SUBMISSION_IDENTITY_PRIVATE_KEY }}
          BASIC_AUTH_PASSWORD_FOR_LEPTOS_ROUTE: ${{ secrets.BASIC_AUTH_PASSWORD_FOR_LEPTOS_ROUTE }}
          BASIC_AUTH_USERNAME_FOR_LEPTOS_ROUTE: ${{ secrets.BASIC_AUTH_USERNAME_FOR_LEPTOS_ROUTE }}
          COOKIE_KEY: ${{ secrets.COOKIE_KEY }}
          EMAIL_ACCESS_TOKEN: ${{ secrets.EMAIL_ACCESS_TOKEN }}
          EMAIL_CLIENT_ID: ${{ secrets.EMAIL_CLIENT_ID }}
          EMAIL_CLIENT_SECRET: ${{ secrets.EMAIL_CLIENT_SECRET }}
          EMAIL_REFRESH_TOKEN: ${{ secrets.EMAIL_REFRESH_TOKEN }}
          EMAIL_TOKEN_EXPIRY: ${{ secrets.EMAIL_TOKEN_EXPIRY }}
          LITEAPI_KEY: ${{ secrets.LITEAPI_KEY_STAGING_TEST }}
          LITEAPI_PREBOOK_BASE_URL: ${{ secrets.LITEAPI_PREBOOK_BASE_URL }}
          NOWPAYMENTS_IPN_SECRET: ${{ secrets.NOWPAYMENTS_IPN_SECRET }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY_STAGING_TEST }}
          YRAL_AUTH_CLIENT_ID: ${{ secrets.YRAL_AUTH_CLIENT_ID }}
          YRAL_AUTH_CLIENT_SECRET: ${{ secrets.YRAL_AUTH_CLIENT_SECRET }}
