name: Build and Check linting

on:
  workflow_call:
    inputs:
      publish-artifact:
        default: false
        required: false
        type: boolean
      app-url:
        description: "Base URL of the app (e.g. staging or PR preview)"
        required: false
        type: string
        default: "https://estatefe.fly.dev/"

env:
  ACTIONS_STEP_DEBUG: true

jobs:
  build_check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo and submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Rust Setup
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "nightly-2025-01-15"
          targets: "wasm32-unknown-unknown"
          components: "clippy,rustfmt"
          
      - name: Override Rust toolchain
        run: rustup override set nightly-2025-01-15
          
      - name: Verify Rust version
        run: rustc --version && cargo --version

      # - uses: cargo-bins/cargo-binstall@main

      - name: Install cargo-leptos
        run: |
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/leptos-rs/cargo-leptos/releases/download/v0.2.31/cargo-leptos-installer.sh | sh

      - name: Cache rust dependencies and build output
        uses: Swatinem/rust-cache@v2

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install npm deps
        run: pnpm install

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang

      - name: lint check
        run: |
          cargo fmt --check

      - name: Build the Leptos project
        run: cargo leptos build --release --lib-features "release-lib" --bin-features "release-bin"
        env:
          LEPTOS_HASH_FILES: true
          PROVAB_HEADERS: ${{ secrets.PROVAB_STAGING_ENVIRONMENT_REQUEST_HEADER_CONTENTS }}
          NOW_PAYMENTS_USDC_ETHEREUM_API_KEY: ${{secrets.NOW_PAYMENTS_USDC_ETHEREUM_API_KEY}}
          APP_URL: ${{ inputs.app-url }}

      # - name: Verify files exist before moving
      #   run: |
      #     echo "Checking if files exist:"
      #     ls -la target/x86_64-unknown-linux-gnu/release/ || echo "gnu target directory not found"
      #     ls -la ssr/target/x86_64-unknown-linux-gnu/release/ || echo "ssr gnu target directory not found"

      # - name: Move files to simpler structure
      #   run: |
      #     mkdir -p target/release
      #     cp target/x86_64-unknown-linux-gnu/release/estate-fe target/release/
      #     if [ -f "ssr/target/x86_64-unknown-linux-gnu/release/hash.txt" ]; then
      #       cp ssr/target/x86_64-unknown-linux-gnu/release/hash.txt target/release/
      #     elif [ -f "target/x86_64-unknown-linux-gnu/release/hash.txt" ]; then
      #       cp target/x86_64-unknown-linux-gnu/release/hash.txt target/release/
      #     else
      #       echo "ERROR: hash.txt not found in either location!"
      #       exit 1
      #     fi
      
      - run: touch .empty
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        if: ${{ inputs.publish-artifact }}
        with:
          name: build-debian
          path: |
            target/release/estate-fe
            target/site
            .empty
            target/release/hash.txt
            city.json
